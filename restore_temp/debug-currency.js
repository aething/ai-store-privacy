/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–π –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã –∫–∞–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ,
 * —Ç–∞–∫ –∏ –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏
 */

// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –¥–æ–ª–∂–Ω–∞ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–∞–ª—é—Ç–∞ EUR –¥–ª—è —Å—Ç—Ä–∞–Ω—ã
function shouldUseEUR(country) {
  if (!country) return false;
  
  // –ö–æ–¥—ã —Å—Ç—Ä–∞–Ω –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ –°–æ—é–∑–∞
  const eurCountryCodes = [
    'AT', 'BE', 'BG', 'HR', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 
    'DE', 'GR', 'HU', 'IE', 'IT', 'LV', 'LT', 'LU', 'MT', 'NL', 
    'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE'
  ];
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã (–µ—Å–ª–∏ –¥–ª–∏–Ω–∞ 2 —Å–∏–º–≤–æ–ª–∞)
  if (country.length === 2) {
    const result = eurCountryCodes.includes(country.toUpperCase());
    console.log(`Country code ${country} is European? ${result}`);
    return result;
  }
  
  // –ü–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ –°–æ—é–∑–∞
  const eurCountries = [
    'Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic',
    'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary',
    'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Netherlands',
    'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia', 'Spain', 'Sweden'
  ];
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
  const result = eurCountries.includes(country);
  console.log(`Country ${country} is European? ${result}`);
  return result;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã –¥–ª—è —Å—Ç—Ä–∞–Ω—ã
function getCurrencyForCountry(country) {
  return shouldUseEUR(country) ? 'EUR' : 'USD';
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–¥—ã —Å—Ç—Ä–∞–Ω
function testCountries() {
  console.log('\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –í–ê–õ–Æ–¢–´ –ü–û –°–¢–†–ê–ù–ï ===\n');
  
  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
  const testCases = [
    { country: 'US', expected: 'USD' },
    { country: 'DE', expected: 'EUR' },
    { country: 'FR', expected: 'EUR' },
    { country: 'GB', expected: 'USD' },
    { country: 'Germany', expected: 'EUR' },
    { country: 'france', expected: 'USD' }, // —Ä–µ–≥–∏—Å—Ç—Ä –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
    { country: null, expected: 'USD' },
    { country: undefined, expected: 'USD' },
    { country: '', expected: 'USD' }
  ];
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Å–ª—É—á–∞–π
  for (const testCase of testCases) {
    const currency = getCurrencyForCountry(testCase.country);
    const result = currency === testCase.expected ? '–£—Å–ø–µ—Ö ‚úì' : `–û—à–∏–±–∫–∞ ‚úó (–æ–∂–∏–¥–∞–ª–æ—Å—å ${testCase.expected})`;
    console.log(`–°—Ç—Ä–∞–Ω–∞: ${testCase.country || '–ø—É—Å—Ç–æ'}, –í–∞–ª—é—Ç–∞: ${currency}, –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result}`);
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —á—Ç–µ–Ω–∏—è –∏–∑ localStorage
function checkLocalStorage() {
  console.log('\n=== –ü–†–û–í–ï–†–ö–ê –°–û–•–†–ê–ù–ï–ù–ò–Ø –î–ê–ù–ù–´–• –í LOCALSTORAGE ===\n');
  
  // –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ, –¥–ª—è Node.js –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  console.log('‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –≠—Ç–æ—Ç —Ç–µ—Å—Ç –¥–ª—è localStorage –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ.');
  console.log('–í Node.js –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –∏–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É localStorage.');
  
  // –ò–º–∏—Ç–∞—Ü–∏—è localStorage –¥–ª—è Node.js
  const mockStorage = {};
  
  const localStorage = {
    setItem: (key, value) => {
      mockStorage[key] = value;
      console.log(`üîµ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ localStorage: ${key} = ${value}`);
    },
    getItem: (key) => {
      console.log(`üîç –ß—Ç–µ–Ω–∏–µ –∏–∑ localStorage: ${key} = ${mockStorage[key] || '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ'}`);
      return mockStorage[key];
    }
  };
  
  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const testUser = {
    id: 1,
    username: 'testuser',
    email: 'test@example.com',
    country: 'DE'
  };
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  localStorage.setItem('user', JSON.stringify(testUser));
  
  // –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userData = localStorage.getItem('user');
  if (userData) {
    const user = JSON.parse(userData);
    console.log(`üìã –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: id=${user.id}, username=${user.username}, country=${user.country}`);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–∞–ª—é—Ç—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã
    const currency = getCurrencyForCountry(user.country);
    console.log(`üí∞ –í–∞–ª—é—Ç–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω—ã ${user.country}: ${currency}`);
  }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å–µ—Ä–≤–µ—Ä–∞ (—ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞)
async function testApi() {
  console.log('\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –°–ï–†–í–ï–†–ê ===\n');
  
  console.log('‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –≠—Ç–æ—Ç —Ç–µ—Å—Ç —Ç—Ä–µ–±—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.');
  console.log('–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–∏ –∑–∞–ø—Ä–æ—Å—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ.');
  
  console.log(`
üìå –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:

1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
   curl -v -b cookie.txt http://localhost:5000/api/users/me
   
2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å —É—á–µ—Ç–æ–º —Å—Ç—Ä–∞–Ω—ã:
   curl -v http://localhost:5000/api/products?country=DE
   
3. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ —Å–º–µ–Ω–∞ —Å—Ç—Ä–∞–Ω—ã:
   node test-country-change.js DE
  `);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã
testCountries();
checkLocalStorage();
testApi();