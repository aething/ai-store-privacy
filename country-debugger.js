/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ—Ç–ª–∞–¥–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç:
 * 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã
 * 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * 4. –ü—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * 5. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã
 */

import fetch from 'node-fetch';

// –ë–∞–∑–æ–≤—ã–π URL API
const API_URL = "http://localhost:5000/api";

// –¢–µ—Å—Ç–æ–≤—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
const USERNAME = "testuser";
const PASSWORD = "Test123!";

// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã –¥–ª—è —Å—Ç—Ä–∞–Ω—ã
function shouldUseEUR(country) {
  if (!country) return false;
  
  const eurCountryCodes = [
    'AT', 'BE', 'BG', 'HR', 'CY', 'CZ', 'DK', 'EE', 'FI', 'FR', 
    'DE', 'GR', 'HU', 'IE', 'IT', 'LV', 'LT', 'LU', 'MT', 'NL', 
    'PL', 'PT', 'RO', 'SK', 'SI', 'ES', 'SE'
  ];
  
  if (country.length === 2) {
    return eurCountryCodes.includes(country.toUpperCase());
  }
  
  const eurCountries = [
    'Austria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic',
    'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary',
    'Ireland', 'Italy', 'Latvia', 'Lithuania', 'Luxembourg', 'Malta', 'Netherlands',
    'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia', 'Spain', 'Sweden'
  ];
  
  return eurCountries.includes(country);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã –¥–ª—è —Å—Ç—Ä–∞–Ω—ã
function getCurrencyForCountry(country) {
  return shouldUseEUR(country) ? 'EUR' : 'USD';
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–≤–æ–¥–∞
function printDivider() {
  console.log("\n" + "=".repeat(60) + "\n");
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ–±—ä–µ–∫—Ç–∞ –∫–∞–∫ JSON —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏
function printJSON(obj) {
  console.log(JSON.stringify(obj, null, 2));
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function testFullCycle() {
  const cookies = { value: '' };
  let userId = null;
  
  printDivider();
  console.log("üî∂ –ù–ê–ß–ê–õ–û –ü–û–õ–ù–û–ì–û –¶–ò–ö–õ–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –°–ú–ï–ù–´ –°–¢–†–ê–ù–´");
  printDivider();
  
  try {
    // –®–ê–ì 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log("üî∑ –®–ê–ì 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    
    const loginResponse = await fetch(`${API_URL}/users/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        username: USERNAME,
        password: PASSWORD
      })
    });
    
    if (!loginResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${loginResponse.status}`);
    }
    
    const userData = await loginResponse.json();
    userId = userData.id;
    
    console.log("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞");
    console.log("üìã –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:");
    printJSON(userData);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º cookie –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    const setCookieHeader = loginResponse.headers.get('set-cookie');
    if (setCookieHeader) {
      cookies.value = setCookieHeader;
      console.log("üç™ –ü–æ–ª—É—á–µ–Ω—ã cookie –¥–ª—è —Å–µ—Å—Å–∏–∏");
    } else {
      console.warn("‚ö†Ô∏è Cookie –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã, –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π");
    }
    
    // –®–ê–ì 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã
    printDivider();
    console.log("üî∑ –®–ê–ì 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –î–û –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã");
    
    let originalCountry = userData.country || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞';
    let originalCurrency = getCurrencyForCountry(userData.country);
    
    console.log(`üìç –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${originalCountry}`);
    console.log(`üí∞ –¢–µ–∫—É—â–∞—è –≤–∞–ª—é—Ç–∞: ${originalCurrency}`);
    
    const productsResponse = await fetch(`${API_URL}/products${userData.country ? `?country=${userData.country}` : ''}`, {
      headers: {
        Cookie: cookies.value
      }
    });
    
    if (!productsResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${productsResponse.status}`);
    }
    
    const products = await productsResponse.json();
    
    console.log("‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã");
    console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${products.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤`);
    
    if (products.length > 0) {
      console.log("üìã –ü–µ—Ä–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç:");
      printJSON({
        id: products[0].id,
        title: products[0].title,
        price: products[0].price,
        priceEUR: products[0].priceEUR
      });
    }
    
    // –®–ê–ì 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    printDivider();
    console.log("üî∑ –®–ê–ì 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    
    // –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω—É - –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é —Ç–µ–∫—É—â–µ–π
    const newCountry = originalCountry === 'US' ? 'DE' : 'US';
    const newCurrency = getCurrencyForCountry(newCountry);
    
    console.log(`üîÑ –ú–µ–Ω—è–µ–º —Å—Ç—Ä–∞–Ω—É —Å ${originalCountry} –Ω–∞ ${newCountry}`);
    console.log(`üîÑ –û–∂–∏–¥–∞–µ–º–∞—è –Ω–æ–≤–∞—è –≤–∞–ª—é—Ç–∞: ${newCurrency}`);
    
    const updateResponse = await fetch(`${API_URL}/users/${userId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        Cookie: cookies.value
      },
      body: JSON.stringify({
        name: userData.name || "",
        phone: userData.phone || "",
        country: newCountry,
        street: userData.street || "",
        house: userData.house || "",
        apartment: userData.apartment || ""
      })
    });
    
    if (!updateResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã: ${updateResponse.status}`);
    }
    
    const updatedUserData = await updateResponse.json();
    
    console.log("‚úÖ –°—Ç—Ä–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞");
    console.log("üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:");
    printJSON(updatedUserData);
    
    // –®–ê–ì 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    printDivider();
    console.log("üî∑ –®–ê–ì 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    
    const meResponse = await fetch(`${API_URL}/users/me`, {
      headers: {
        Cookie: cookies.value
      }
    });
    
    if (!meResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${meResponse.status}`);
    }
    
    const currentUserData = await meResponse.json();
    
    console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã");
    console.log("üìã –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:");
    printJSON(currentUserData);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏–ª–∞—Å—å
    if (currentUserData.country !== newCountry) {
      console.error(`‚ùå –û–®–ò–ë–ö–ê: –°—Ç—Ä–∞–Ω–∞ –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∞—Å—å. –û–∂–∏–¥–∞–ª–æ—Å—å: ${newCountry}, –ø–æ–ª—É—á–µ–Ω–æ: ${currentUserData.country}`);
    } else {
      console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ ${newCountry}`);
    }
    
    // –®–ê–ì 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã
    printDivider();
    console.log("üî∑ –®–ê–ì 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ü–û–°–õ–ï –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã");
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—Ç—Ä–∞–Ω—ã –≤ –∑–∞–ø—Ä–æ—Å–µ
    const newProductsResponse = await fetch(`${API_URL}/products?country=${newCountry}`, {
      headers: {
        Cookie: cookies.value
      }
    });
    
    if (!newProductsResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${newProductsResponse.status}`);
    }
    
    const newProducts = await newProductsResponse.json();
    
    console.log("‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–æ–π");
    console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${newProducts.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤`);
    
    if (newProducts.length > 0) {
      console.log("üìã –ü–µ—Ä–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç:");
      printJSON({
        id: newProducts[0].id,
        title: newProducts[0].title,
        price: newProducts[0].price,
        priceEUR: newProducts[0].priceEUR
      });
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∞—è —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å —É—á–µ—Ç–æ–º –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω—ã
      const expectedPrice = newCurrency === 'EUR' ? newProducts[0].priceEUR : newProducts[0].price;
      console.log(`üí∞ –û–∂–∏–¥–∞–µ–º–∞—è —Ü–µ–Ω–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${expectedPrice} ${newCurrency}`);
    }
    
    // –ò–¢–û–ì
    printDivider();
    console.log("üî∂ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø");
    printDivider();
    
    console.log(`‚úÖ –ò—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞: ${originalCountry} (–≤–∞–ª—é—Ç–∞: ${originalCurrency})`);
    console.log(`‚úÖ –ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∞: ${currentUserData.country} (–≤–∞–ª—é—Ç–∞: ${getCurrencyForCountry(currentUserData.country)})`);
    console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ`);
    console.log(`‚ÑπÔ∏è –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±—Ä–∞—É–∑–µ—Ä–µ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã`);
    
  } catch (error) {
    console.error("‚ùå –ü–†–û–ò–ó–û–®–õ–ê –û–®–ò–ë–ö–ê:");
    console.error(error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
testFullCycle();