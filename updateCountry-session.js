/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å)
 * –í–µ—Ä—Å–∏—è —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —á–µ—Ä–µ–∑ API –∏ —Å–µ—Å—Å–∏—é
 */

async function updateCountry(countryCode) {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
  const userString = localStorage.getItem('user');
  if (!userString) {
    console.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
    return;
  }

  const user = JSON.parse(userString);
  console.log('–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
  console.log(`–û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω—É —Å ${user.country || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'} –Ω–∞ ${countryCode}...`);

  try {
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —Å–µ—Å—Å–∏—é
    const response = await fetch(`/api/users/${user.id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      // –í–∞–∂–Ω–æ: –≤–∫–ª—é—á–∞–µ–º –∫—É–∫–∏ —Å–µ—Å—Å–∏–∏ –≤ –∑–∞–ø—Ä–æ—Å
      credentials: 'include',
      body: JSON.stringify({
        country: countryCode
      })
    });

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω—ã');
    }

    const updatedUser = await response.json();
    console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', updatedUser);

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ localStorage
    const newUser = { ...user, country: countryCode };
    localStorage.setItem('user', JSON.stringify(newUser));
    console.log('–î–∞–Ω–Ω—ã–µ –≤ localStorage –æ–±–Ω–æ–≤–ª–µ–Ω—ã');

    // –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ ' + countryCode);
    
    // –°–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤ —Å—Ç—Ä–∞–Ω –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ –°–æ—é–∑–∞
    const europeanCountryCodes = [
      'at', 'be', 'bg', 'hr', 'cy', 'cz', 'dk', 'ee', 'fi', 'fr', 'de', 'gr', 
      'hu', 'ie', 'it', 'lv', 'lt', 'lu', 'mt', 'nl', 'pl', 'pt', 'ro', 'sk', 
      'si', 'es', 'se'
    ];
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞–ª—é—Ç–µ
    console.log('üí∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞–ª—é—Ç–µ:');
    if (countryCode === 'DE' || europeanCountryCodes.includes(countryCode.toLowerCase())) {
      console.log('–°—Ç—Ä–∞–Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ï–°, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–∞–ª—é—Ç–∞ EUR (‚Ç¨)');
    } else {
      console.log('–°—Ç—Ä–∞–Ω–∞ –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –ï–°, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤–∞–ª—é—Ç–∞ USD ($)');
    }

    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    console.log('‚ö†Ô∏è –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π');
    
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–æ–º–æ—â—å—é API
    console.log('–•–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? –ù–∞–∂–º–∏—Ç–µ Y/N –≤ –¥–∏–∞–ª–æ–≥–µ');
    if (confirm('–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π?')) {
      location.reload();
    }
    
    return updatedUser;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω—ã:', error);
    return null;
  }
}

// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω!');
console.log('üëâ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ updateCountry("US") –¥–ª—è —Ü–µ–Ω –≤ USD');
console.log('üëâ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ updateCountry("DE") –¥–ª—è —Ü–µ–Ω –≤ EUR');